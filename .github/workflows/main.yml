name: Generate clash rules files

on:
  workflow_dispatch:
    inputs:
      PRE_RELEASE:
        description: "Set as pre-release"
        required: false
        type: boolean
        default: false
  schedule:
    - cron: "50 5 * * *"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set ENV variables
        run: |
          echo "RELEASE_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "RELEASE_DATE=$(date +'%A %F %T %Z')" >> $GITHUB_ENV

      - name: Create release directory
        run: mkdir release

      - name: Generate clash text rules
        run: |
          gh api https://api.github.com/repos/hagezi/dns-blocklists/contents/wildcard/pro.plus-onlydomains.txt -H "Accept: application/vnd.github.raw" >> TempProPlus.txt
          grep -v '^#' TempProPlus.txt > TempProPlusNew.txt
          sed 's/^/+./' TempProPlusNew.txt > HageziProPlus.txt

      - name: Generate clash mrs rules
        run: |
          gh release download -p "mihomo-linux-amd64-v3-v*.gz" --repo MetaCubeX/mihomo --output mihomo-linux-amd64-v3.gz
          gzip -Nd ./mihomo-linux-amd64-v3.gz
          chmod +x ./mihomo-linux-amd64-v3
          ./mihomo-linux-amd64-v3 convert-ruleset domain text HageziProPlus.txt HageziProPlus.mrs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Release Notes
        run: |
          echo "* Updated on ${{ env.RELEASE_DATE }}" > RELEASE_NOTES

      - name: Push assets to release branch
        if: ${{ !inputs.PRE_RELEASE }}
        run: |
          cd release || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f origin release

      - name: Purge jsDelivr CDN
        if: ${{ !inputs.PRE_RELEASE }}
        run: |
          cd release || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done

      - name: Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          body_path: RELEASE_NOTES
          draft: false
          prerelease: ${{ inputs.PRE_RELEASE }}
          files: ./release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean older releases
        if: ${{ !inputs.PRE_RELEASE }}
        uses: dev-drprasad/delete-older-releases@v0.3.4
        with:
          keep_latest: 7
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
